{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCQCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACK,6BAAKF,IACL,4BAAIC,WCaNK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKlBC,EAbG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCRI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,aC+CJC,E,kDA1CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAf1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJP,E,gEAQO,IAAD,OAChBI,MAAM,8CACLtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAUjC,IAAD,OACCC,EAAiBC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAAC,GAC5C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAEpE,OAAiC,IAA7BH,KAAKN,MAAMvB,OAAOkC,OACX,2CAGP,sBAAKtC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ4B,a,GAlCZO,IAAMC,WCExBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDzD,M","file":"static/js/main.6177fe20.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}  />\n            <div>\n                 <h2>{name}</h2>\n                 <p>{email}</p>\n            </div>\n        </div>    \n    );\n} \n\nexport default Card; "," import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            { \n                robots.map((user, i) => {\n                    return (\n                        <Card \n                            key={i} \n                            id={robots[i].id} \n                            name ={robots[i].name} \n                            email={robots[i].email}\n                        />\n                    );\n                }) //key={i}} let's the DOM know which card is which (ie. in case you delete one of the card, it won't get confused)\n            }\n        </div>\n    );\n}\n\nexport default CardList; ","import React from 'react';\n\nconst SearchBox = ({ searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search robots' \n            onChange={ searchChange   }\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY:'scroll', border:'5px solid black', height:'800px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React from 'react';\nimport CardList from '../components/CardList';\n//import { robots } from './robots'; //gotta destructure with {} if you're exporting multiple\nimport SearchBox from '../components/SearchBox';\nimport './App.css' \nimport Scroll from '../components/Scroll';\n\n\n\nclass App extends React.Component {\n    constructor() {\n        super() //refer back to advanced objects video for reason behind this\n        this.state = {\n            robots: [],\n            searchfield: '',\n        }\n    }\n    \n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json()) //converting the new created response parameter to json\n        .then(users => this.setState({ robots: users})); \n            \n        //this.setState({ robots: robots})\n    }\n    \n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value }) //to update the searchfield in the constructor from ''\n         \n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        if (this.state.robots.length === 0) { // could also write: if(!this.state.robots.length) {...}\n            return <h1> Loading </h1>\n        } else {\n        return (\n            <div className='tc'>\n            <h1 className='f1' >RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/> \n            <Scroll>\n            <CardList robots={filteredRobots}/>\n            </Scroll>\n            </div>\n        ); \n        }\n    }\n     \n}\n\nexport default App;","import React from 'react'; //view library (little robot does the DOM manipulation for us)\nimport ReactDOM from 'react-dom'; //react for DOM (could also have imported react for mobile phones, VR, desktop apps, etc)\nimport './index.css'; //this index.css is a css file that corresponds to the react components in this index.js file \n//import Card from './Card'; //Hello.js because standard to have component file names capitalized\nimport reportWebVitals from './reportWebVitals'; //won't discuss in this course but serviceworkers allows our apps to potentially run faster and offline\nimport 'tachyons';\nimport App from './containers/App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root')); //<App /> automatically assumes App.js\n//can add props (properties) within the component tag\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}